constraints:
  type: group
  label: Constraints
  default:
    include:
      label: Include this constraint
      type: bool
      default: true
    batch_size:
      type: int
      label: Batch Size
      hint: The number of points used to compute 1 gradient
      default: 1000
    lambda_weighting:
      label: Lambda Weighting
      type: str
      default: "1"
      hint: "Defines the weight of each point cloud inside loss function calculation.\nExamples: constant to define weight relative to other constraints; or 'sdf' for the Distance Function; or a Sympy expression in general"


training:
  type: group
  label: Training
  default:
    amp: 
      type: bool
      default: false
      hint: hint
    amp_dtype: 
      type: str
      default: float16
    grad_agg_freq: 
      type: int
      default: 1
    max_steps: 
      type: int
      default: 1000
    ntk:
      type: group
      default:
        run_freq: 
          type: int
          default: 1000
        save_name: 
          type: str
          default: null
        use_ntk: 
          type: bool
          default: false
    print_stats_freq: 
      type: int
      default: 100
    rec_constraint_freq: 
      type: int
      default: 2000
    rec_inference_freq: 
      type: fixed
      default: ${training.rec_results_freq}
    rec_monitor_freq: 
      type: fixed
      default: ${training.rec_results_freq}
    rec_results_freq: 
      type: int
      default: 1500
    rec_validation_freq: 
      type: fixed
      default: ${training.rec_results_freq}
    save_network_freq: 
      type: int
      default: 1000
    summary_freq: 
      type: int
      default: 1000

arch:
  type: option
  label: NN Architecture
  default: fully_connected
  choices:
    fully_connected:
      _target_: 
        type: fixed
        default: modulus.models.fully_connected.FullyConnectedArch
      adaptive_activations: 
        type: bool
        default: false
        hint: What are these?
      layer_size:
        type: int 
        default: 512
      nr_layers: 
        type: int
        default: 6
      skip_connections: 
        type: bool
        default: false
        hint: "Explain what that does... or point to document."
      weight_norm: 
        type: bool
        default: true

    fourier_net:
      _target_: 
        type: fixed
        default: modulus.models.fourier_net.FourierNetArch
      nr_layers:
        type: int
        default: 6
      skip_connections: 
        type: bool
        default: false
        hint: "[fourier_net] Explain what that does... or point to document."
      
      weight_norm: 
        type: bool
        default: true
        hint: "explain weight normalization... or point to document."
      adaptive_activations: 
        type: bool
        default: false
        hint: what is this?
      frequencies:
        type: string_tuple
        default: ('axis', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
        hint: explain their purpose...
      frequencies_params:
        type: string_tuple
        default: ('axis', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
        hint: explain... why is this different from frequencies...

scheduler:
  type: option
  label: Scheduler
  default: standard
  choices:
    standard:
      _name_: 
        type: str
        default: tf.ExponentialLR      
      _target_: 
        type: str
        default: custom
      decay_rate: 
        label: Decay Rate
        type: float
        default: 0.95
      decay_steps:
        label: Decay Steps 
        type: int
        default: 200   

optimizer:
  type: option
  label: Optimizer
  default: adam
  choices:
    adam:
      _params_:
        type: group
        label: Parameters (?)
        default:
          apply_gradients: 
            type: str
            default: adam_apply_gradients
          compute_gradients: 
            type: str
            default: adam_compute_gradients
      _target_: 
        type: fixed
        default: torch.optim.Adam
      amsgrad: 
        type: bool
        label: "AMS grad (?)"
        default: false
      betas:
        type: list
        hint: "[list] Two of these... e.g., [0.9, 0.999]"
        default:
        - 0.9
        - 0.999
      eps: 
        type: float
        hint: "[float] Threshold below which..."
        default: 1.0e-08
      lr: 
        type: float
        label: Learning Rate
        hint: "[float] the alpha"
        default: 0.001
      weight_decay: 
        type: float
        label: Weight Decay
        hint: "[float] What is this?"
        default: 0.0  
    lbfgs:
      _params_:
        type: group
        label: Parameters (?)
        default:
          apply_gradients: 
            type: str
            default: bfgs_apply_gradients
          compute_gradients: 
            type: str
            default: bfgs_compute_gradients
      _target_: 
        type: fixed
        default: torch.optim.LBFGS
      lr: 
        type: float
        label: Learning Rate
        hint: "[float] the alpha"
        default: 0.001
      max_iter:
        type: int
        default: 25
